// Generated by CoffeeScript 1.6.3
(function() {
  var App, Drawer, Reader, Resizer, Writer, messages,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  messages = {
    'betahive': 'Merry Christmas Guys! Well done with Pingle so far, thanks for getting me involved in such an exciting project! Good luck for next year! <br> Anders',
    'kaldor': 'Merry Christmas To All at Kaldor yet another great year for pugpig! well done!<br> Anders',
    'agentivity': 'Merry Christmas Ed and Riaan, hope you have a great new year! <br> Anders',
    'measured': 'Merry Christmas Sam and Max! Well done on a great year, v excited about the next one!<br> Anders',
    'condiment': 'Merry Christmas Condiment, hope the new year treats you well! <br> Anders',
    'ito': 'Merry Christmas Ito! looking forward to working with you in the new year! <br> Anders',
    'pcs': 'Merry Christmas to all at PCS! Thoroughly enjoyed working with you and looking forward to more next year!<br> Anders',
    'juju': 'Merry Christmas Alex and Sue! Hope you have a great time looking forward to more projects next year!<br> Anders',
    'error': 'Merry Christmas Guys!I thoroughly enjoyed working with you hope we can find some projects in the new year. Enjoy your break!<br> Anders',
    'faith': 'Merry Christmas to all at Faith, hope you have a great new year! <br> Anders',
    'solstice': 'Merry Christmas to all at Solstice, hope we gat a chance to work together soon! <br> Anders',
    'flumes': 'Merry Christmas Steve! Looking forward to seeing the progress of flumes next year!<br> Anders',
    'smart': 'Merry Christmas to all at Smart 421, enjoy the christmas break!<br> Anders',
    'defacto': 'Merry Christmas to all at De Facto, enjoy the christmas break! <br> Anders',
    'thatsbrave': 'Merry Christmas Vaughn and co. Hope you have a good one!<br> Anders',
    'vm': 'Merry Christmas Alex, hope you have a great new year!<br> Anders',
    'kl': 'Merry Christmas to all at Kingsland Linassi hope you have a great new year!<br> Anders',
    'rtc': 'Merry Christmas to all at Real Time Content hope you have a great new year!<br> Anders',
    'crafted': 'Merry Christmas to all at Crafted hope you have a great new year!<br> Anders',
    'fesuffolk': 'Merry Christmas FESuffolk gang! Thanks for your support this year!<br> Anders',
    'iprug': 'Merry Christmas IPRUG Crew! looking forward to more burgers in the new year (and ruby)<br> Anders',
    'alexd': "Merry Christmas Alex! hope you have a great one!<br> Anders",
    'default': "Merry Christmas <br> from Anders!"
  };

  Drawer = (function() {
    function Drawer(app) {
      this.app = app;
      this.draw = __bind(this.draw, this);
      this.resize = __bind(this.resize, this);
      $(this.app).on('resized', this.resize);
      this.canvas = $('canvas')[0];
      this.width = 0;
      this.height = 0;
      this.x = 0;
      this.y = 0;
      this.size = 16;
      this.ctx = this.canvas.getContext('2d');
      this.draw();
    }

    Drawer.prototype.resize = function(event, lowest) {
      this.lowest = lowest;
      this.canvas.width = this.lowest;
      this.canvas.height = this.lowest;
      $('canvas').css({
        width: this.lowest,
        height: this.lowest
      });
      $('.canvas_container').css({
        width: this.lowest,
        height: this.lowest,
        margin: "-" + (this.lowest / 2) + "px"
      });
      this.x = 0;
      this.y = 0;
      return this.limit = this.lowest;
    };

    Drawer.prototype.draw = function() {
      var random;
      random = Math.random();
      if (random < 0.5) {
        this.ctx.fillStyle = "rgba(255,255,255," + (Math.random()) + ")";
      }
      if (random > 0.5 && random < 0.8) {
        this.ctx.fillStyle = "rgba(" + (Math.ceil(Math.random() * 255)) + ",0,0,1)";
      }
      if (random > 0.8) {
        this.ctx.fillStyle = "rgba(0," + (Math.ceil(Math.random() * 255)) + ",0,1)";
      }
      if (this.y < this.limit) {
        if (Math.random() < 0.6) {
          this.ctx.fillRect(this.lowest / 2 + this.x - (this.size / 2), this.lowest / 2 + this.y - (this.size / 2), this.size, this.size);
          this.ctx.fillRect(this.lowest / 2 - this.x - (this.size / 2), this.lowest / 2 + this.y - (this.size / 2), this.size, this.size);
          this.ctx.fillRect(this.lowest / 2 + this.x - (this.size / 2), this.lowest / 2 - this.y - (this.size / 2), this.size, this.size);
          this.ctx.fillRect(this.lowest / 2 - this.x - (this.size / 2), this.lowest / 2 - this.y - (this.size / 2), this.size, this.size);
        }
        this.x += this.size;
        if (this.x > this.limit) {
          this.limit -= this.size;
          this.x = 0;
          this.y += this.size;
        }
      }
      return window.requestAnimationFrame(this.draw);
    };

    return Drawer;

  })();

  Writer = (function() {
    function Writer(app) {
      this.app = app;
      $(this.app).on('newmessage', this.update);
    }

    Writer.prototype.update = function(event, message) {
      return $('.greeting').html(message);
    };

    return Writer;

  })();

  Reader = (function() {
    function Reader(app) {
      this.app = app;
      this.updateMessage = __bind(this.updateMessage, this);
      this.updateMessage();
      $(window).on('hashchange', this.updateMessage);
    }

    Reader.prototype.updateMessage = function() {
      var key;
      key = window.location.hash.substring(1);
      if (messages[key]) {
        this.message = messages[key];
      } else {
        this.message = messages['default'];
      }
      return $(this.app).trigger('newmessage', this.message);
    };

    return Reader;

  })();

  Resizer = (function() {
    function Resizer(app) {
      this.app = app;
      this.resize = __bind(this.resize, this);
      $(window).on('resize', this.resize);
      this.counter = 3;
      this.resize();
    }

    Resizer.prototype.resize = function() {
      this.counter += 1;
      if (this.counter > 3) {
        $(this.app).trigger('resized', Math.min($(window).width(), $(window).height()));
        return this.counter = 0;
      }
    };

    return Resizer;

  })();

  App = (function() {
    function App() {
      this.drawer = new Drawer(this);
      this.writer = new Writer(this);
      this.reader = new Reader(this);
      this.resizer = new Resizer(this);
    }

    return App;

  })();

  $(function() {
    return window.app = new App;
  });

}).call(this);
